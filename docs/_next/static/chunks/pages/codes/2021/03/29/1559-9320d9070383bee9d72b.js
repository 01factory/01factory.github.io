_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[21],{"1niF":function(t,n,e){"use strict";e.r(n),e.d(n,"default",(function(){return u}));var r=e("rePB"),o=e("Ff2n"),l=(e("q1tI"),e("7ljp")),i=e("3wrV");function a(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function c(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?a(Object(e),!0).forEach((function(n){Object(r.a)(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):a(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}var s={};function u(t){var n=t.components,e=Object(o.a)(t,["components"]);return Object(l.a)("wrapper",c(c(c({},s),e),{},{components:n,mdxType:"MDXLayout"}),Object(l.a)("h1",null,"\u5bcc\u6587\u672c\u6846"),Object(l.a)("h2",null,"\u7b2c\u4e09\u65b9\u7ec4\u4ef6"),Object(l.a)("p",null,"\u5bcc\u6587\u672c\u6846\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u975e\u5e38\u4f18\u79c0\u7684\u5bcc\u6587\u672c\u6846\u63a7\u4ef6",Object(l.a)("inlineCode",{parentName:"p"},"quill"),"\u7684",Object(l.a)("a",c({parentName:"p"},{href:"https://www.npmjs.com/package/react-quill"}),"\u4e00\u4e2a",Object(l.a)("inlineCode",{parentName:"a"},"react"),"\u5c01\u88c5"),"\u3002"),Object(l.a)("h2",null,"\u6587\u6863\u5730\u5740",Object(l.a)("a",c({parentName:"h2"},{href:"https://quilljs.com/docs/modules/"}),"https://quilljs.com/docs/modules/")),Object(l.a)("h2",null,"\u4e0b\u8f7d\u5b89\u88c5\u4f9d\u8d56"),Object(l.a)(i.a,{lan:"shell",code:"\nyarn add react-quill\n",mdxType:"CodeEditor"}),Object(l.a)("h2",null,"\u57fa\u672c\u7528\u6cd5"),Object(l.a)(i.a,{lan:"ts",code:"\nimport dynamic from 'next/dynamic';\nimport 'react-quill/dist/quill.snow.css';\nimport * as Quill from \"quill\";\n \nconst ReactQuill = dynamic(\n\timport('react-quill'),\n\t{ ssr: false }\n);\n \nexport interface UnprivilegedEditor {\n\tgetLength(): number;\n\tgetText(index?: number, length?: number): string;\n\tgetHTML(): string;\n\tgetBounds(index: number, length?: number): Quill.BoundsStatic;\n\tgetSelection(focus?: boolean): Quill.RangeStatic;\n\tgetContents(index?: number, length?: number): Quill.DeltaStatic;\n}\n \nexport interface ComponentProps {\n\tid?: string;\n\tclassName?: string;\n\tstyle?: React.CSSProperties;\n\treadOnly?: boolean;\n\tvalue?: string | Quill.Delta;\n\tdefaultValue?: string | Quill.Delta;\n\tplaceholder?: string;\n\ttabIndex?: number;\n\tbounds?: string | HTMLElement;\n\tscrollingContainer?: string | HTMLElement;\n\tonChange?: (\n\t\tcontent: string,\n\t\tdelta: Quill.Delta,\n\t\tsource: Quill.Sources,\n\t\teditor: UnprivilegedEditor\n\t) => void;\n\tonChangeSelection?: (\n\t\trange: Quill.RangeStatic,\n\t\tsource: Quill.Sources,\n\t\teditor: UnprivilegedEditor\n\t) => void;\n\tonFocus?: (\n\t\trange: Quill.RangeStatic,\n\t\tsource: Quill.Sources,\n\t\teditor: UnprivilegedEditor\n\t) => void;\n\tonBlur?: (\n\t\tpreviousRange: Quill.RangeStatic,\n\t\tsource: Quill.Sources,\n\t\teditor: UnprivilegedEditor\n\t) => void;\n\tonKeyPress?: React.EventHandler<any>;\n\tonKeyDown?: React.EventHandler<any>;\n\tonKeyUp?: React.EventHandler<any>;\n\tformats?: string[];\n\tchildren?: React.ReactElement<any>;\n\tpreserveWhitespace?: boolean;\n \n\tstyles?: never;\n}\n \nexport default function RichEditor({ value, onChange }: ComponentProps) {\n\tconst toolbarOptions = [\n\t\t['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n\t\t['blockquote', 'code-block'],\n \n\t\t[{ 'header': 1 }, { 'header': 2 }],               // custom button values\n\t\t[{ 'list': 'ordered' }, { 'list': 'bullet' }],\n\t\t[{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript\n\t\t[{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent\n\t\t[{ 'direction': 'rtl' }],                         // text direction\n \n\t\t[{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n\t\t[{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n \n\t\t[{ 'color': [] as string[] }, { 'background': [] as string[] }],          // dropdown with defaults from theme\n\t\t[{ 'font': [] as string[] }],\n\t\t[{ 'align': [] as string[] }],\n \n\t\t['clean'],                                         // remove formatting button\n\t\t['image', 'code-block']\n\t];\n\treturn <ReactQuill defaultValue={value} theme=\"snow\" modules={{ toolbar: toolbarOptions }} onChange={onChange}></ReactQuill>;\n}\n",mdxType:"CodeEditor"}))}u.isMDXComponent=!0},"6nKl":function(t,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/codes/2021/03/29/1559",function(){return e("1niF")}])}},[["6nKl",0,1,2,4,3,5]]]);