_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[32],{NTfw:function(t,n,e){"use strict";e.r(n),e.d(n,"default",(function(){return c}));var o=e("rePB"),p=e("Ff2n"),r=(e("q1tI"),e("7ljp")),s=e("3wrV");function i(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,o)}return e}function a(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?i(Object(e),!0).forEach((function(n){Object(o.a)(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}var u={};function c(t){var n=t.components,e=Object(p.a)(t,["components"]);return Object(r.a)("wrapper",a(a(a({},u),e),{},{components:n,mdxType:"MDXLayout"}),Object(r.a)("h1",null,"Uploader"),Object(r.a)(s.a,{lan:"ts",code:"\nimport { useState } from 'react';\nimport Uppy from '@uppy/core';\nimport XHRUpload from '@uppy/xhr-upload';\n// import Webcam from '@uppy/webcam';\n// import ScreenCapture from '@uppy/screen-capture';\n// import ImageEditor from '@uppy/image-editor';\n// import OneDrive from '@uppy/onedrive';\n// import Instagram from '@uppy/instagram';\nimport { DashboardModal, useUppy } from '@uppy/react';\nimport '@uppy/core/dist/style.css';\nimport '@uppy/dashboard/dist/style.css';\nimport '@uppy/progress-bar/dist/style.css';\nimport '@uppy/status-bar/dist/style.css';\nimport { useToasts } from '@geist-ui/react';\nimport { Result } from '../pages/api/upload';\n\n/**\n * \u6587\u4ef6\u4e0a\u4f20\n */\nexport default function Uploader({ file, onClose }: { file: string; onClose(s: string): void; }) {\n\tconst endpoint = '/api/upload';\n\tconst getfile = '/api/getfile/';\n\tconst [filepath, setfilepath] = useState(file);\n\tconst [, toast] = useToasts();\n\tconst [open, setopen] = useState(false);\n\tconst uppy = useUppy(() => {\n\t\tconst uppy = Uppy({\n\t\t\tallowMultipleUploads: false,\n\t\t\tautoProceed: true,\n\t\t\tdebug: true,\n\t\t\trestrictions: {\n\t\t\t\tmaxFileSize: 10737418240,\t// 10gb 1024=1kb 1024*1024=1mb 1024*1024*1024=1gb\n\t\t\t\tmaxNumberOfFiles: 1,\n\t\t\t\tminNumberOfFiles: 1,\n\t\t\t\tallowedFileTypes: ['application/x-7z-compressed', 'application/x-gzip', 'application/zip', 'application/x-rar']\n\t\t\t}\n\t\t});\n\t\tuppy.use(XHRUpload, {\n\t\t\tfieldName: 'file',\n\t\t\tformData: true,\n\t\t\tmethod: 'PUT',\n\t\t\tendpoint,\n\t\t\ttimeout: 1000 * 60 * 10\t// 10\u5206\u949f\n\t\t});\n\t\tuppy.on('complete', (result) => {\n\t\t\t// \u4ee5\u4e0b\u4ee3\u7801\u53ef\u5c06\u4e0a\u4f20\u7684\u5185\u5bb9\u53d8\u6210\u4e0b\u8f7d\u94fe\u63a5,\u653e\u5728\u9875\u9762\u4e0a.\n\t\t\tconst [success] = result.successful;\n\t\t\tif (success) {\n\t\t\t\tconst ret = success.response.body as Result;\n\t\t\t\tif (ret.ok) {\n\t\t\t\t\ttoast({\n\t\t\t\t\t\ttext: '\u4e0a\u4f20\u6210\u529f',\n\t\t\t\t\t\ttype: 'success'\n\t\t\t\t\t});\n\t\t\t\t\tconst file = getfile + ret.fileid;\n\t\t\t\t\tsetfilepath(file);\n\t\t\t\t\tsetopen(false);\n\t\t\t\t\tonClose(file);\n\t\t\t\t} else {\n\t\t\t\t\ttoast({\n\t\t\t\t\t\ttext: '\u4e0a\u4f20\u5931\u8d25',\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t\tsetfilepath('');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tuppy.on('error', () => {\n\t\t\ttoast({\n\t\t\t\ttext: '\u4e0a\u4f20\u5931\u8d25',\n\t\t\t\ttype: 'error'\n\t\t\t});\n\t\t\tsetfilepath('');\n\t\t});\n\t\treturn uppy;\n\t});\n\treturn <>\n\t\t<div>\n\t\t\t{filepath && <a href={filepath} download>\u4e0b\u8f7d</a>}\n\t\t</div>\n\t\t<input type='button' value='\u4e0a\u4f20\u6587\u4ef6...' onClick={() => {\n\t\t\tsetopen(true);\n\t\t}} />\n\t\t<DashboardModal closeModalOnClickOutside uppy={uppy} open={open}\n\t\t\tonRequestClose={() => {\n\t\t\t\tsetopen(false);\n\t\t\t}} />\n\t\t<style jsx>{`\ninput{\nmargin:10px;\npadding-top:10px;\npadding-bottom:10px;\npadding-left:50px;\npadding-right:50px;\nborder-style: none;\nbackground-color: #202523a1;\ncolor: #ffd00071;\nborder-radius: 15px;\ntransition: all 800ms;\n}\ninput:hover{\nbackground-color: #499b41a1;\ncolor: #ffd000ab;\n}\n`}</style>\n\t</>;\n}\n",mdxType:"CodeEditor"}))}c.isMDXComponent=!0},t3az:function(t,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/codes/2021/04/30/2052",function(){return e("NTfw")}])}},[["t3az",0,1,2,4,3,5]]]);