_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[86],{miOF:function(e,o,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/documents/2021/02/281652",function(){return t("nkgE")}])},nkgE:function(e,o,t){"use strict";t.r(o),t.d(o,"default",(function(){return i}));var r=t("rePB"),n=t("Ff2n"),c=(t("q1tI"),t("7ljp")),a=t("3wrV");function s(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);o&&(r=r.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,r)}return t}function d(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?s(Object(t),!0).forEach((function(o){Object(r.a)(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}var u={};function i(e){var o=e.components,t=Object(n.a)(e,["components"]);return Object(c.a)("wrapper",d(d(d({},u),t),{},{components:o,mdxType:"MDXLayout"}),Object(c.a)("h1",null,"Docker"),Object(c.a)("h2",null,"\u4f7f\u7528\u955c\u50cf\u5b89\u88c5"),Object(c.a)("p",null,"\u56e0\u4e3a\u4f60\u5bb6\u7f51\u7edc\u539f\u56e0\uff0c\u5b89\u88c5docker\u548c\u4f7f\u7528\u65f6\u4e0b\u8f7d\u955c\u50cf\u7684\u901f\u5ea6\u4e0d\u7406\u60f3\uff0c\u4ee5\u4e0b\u63a8\u8350\u7684\u65b9\u6cd5\u4e3a\u4f7f\u7528\u56fd\u5185\u5f00\u6e90\u955c\u50cf\u7684\u65b9\u6cd5\uff1a"),Object(c.a)(a.a,{lan:"shell",code:'sudo apt-get update\nsudo apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common\ncurl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/debian/gpg | sudo apt-key add -\nsudo add-apt-repository "deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian $(lsb_release -cs) stable"\nsudo apt-get update\nsudo apt-get install -y docker-ce docker-ce-cli containerd.io\necho -e "{\n  \\"registry-mirrors\\": [\\"https://docker.mirrors.ustc.edu.cn/\\"]\n}" | sudo tee /etc/docker/daemon.json\nsudo docker run hello-world\n',mdxType:"CodeEditor"}),Object(c.a)("p",null,"\u6700\u540e\u5982\u679c\u8f93\u51fa\uff1a"),Object(c.a)(a.a,{lan:"prolog",code:'\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n 1. The Docker client contacted the Docker daemon.\n 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.\n    (amd64)\n 3. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.\n\nTo try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\n\nShare images, automate workflows, and more with a free Docker ID:\n https://hub.docker.com/\n\nFor more examples and ideas, visit:\n https://docs.docker.com/get-started/\n',mdxType:"CodeEditor"}),Object(c.a)("p",null,"\u5c31\u662f\u6210\u529f\u4e86"),Object(c.a)("h2",null,"\u5b89\u88c5docker-compose"),Object(c.a)(a.a,{lan:"shell",code:"sudo curl -L https://get.daocloud.io/docker/compose/releases/download/1.28.5/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\n",mdxType:"CodeEditor"}),Object(c.a)("p",null,"\u5173\u95ed\u5168\u90e8docker\u7684\u5feb\u6377\u547d\u4ee4"),Object(c.a)(a.a,{lan:"shell",code:"sudo docker stop $(sudo docker ps -aq) && sudo docker rm $(sudo docker ps -aq)\n",mdxType:"CodeEditor"}))}i.isMDXComponent=!0}},[["miOF",0,1,2,4,3,5]]]);